<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "unRAIDServer">
<!ENTITY author    "LimeTech">
<!ENTITY version   "6.4.1">
<!ENTITY category  "stable">
<!ENTITY pluginURL "https://s3.amazonaws.com/dnld.lime-technology.com/&category;/&name;.plg">
<!ENTITY zip       "https://s3.amazonaws.com/dnld.lime-technology.com/&category;/&name;-&version;-x86_64.zip">
<!ENTITY md5       "https://s3.amazonaws.com/dnld.lime-technology.com/&category;/&name;-&version;-x86_64.md5">
<!ENTITY files     "bz*,make_bootable.bat,make_bootable_linux,make_bootable_mac,memtest,*.txt,syslinux/syslinux.cfg-">

<!ENTITY infozip   "infozip-6.0-i486-1.txz">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         category="&category;"
         pluginURL="&pluginURL;">

<CHANGES>
<![CDATA[
### Version 6.4.1 2018-02-02

Summary:

- The Linux kernel includes the "retpoline" patch set and we have recompiled using GCC 7.3. This
addresses 'Spectre Variant 2'.

- Added kernel patch to address GPU passthrough issue on AMD Threadripper.

- Following [guidance from Intel](https://newsroom.intel.com/news/root-cause-of-reboot-issue-identified-updated-guidance-for-customers-and-partners/)
we have reverted Intel microde to the 2017-11-17 release.

- Refinements to SSL/TLS handling:
  - When not using SSL/TLS (https), we no longer auto-redirect PORTSSL (443) to PORT (80).
  - Added "Local TLD" configuration variable to specify your local top-level domain (default is "local").

- User *bonienl* added the possibility to remove or preserve user defined networks within Docker. This
is for advanced users only (also explained in the Help text):
  1. webGUI allows any interface without IP address to be used for Docker. This gives the user more possibilities.
  2. Auto-generated interfaces may be included or excluded. This can help with potential conflicts.

- Fixed bug related to improper handling of replacing device in btrfs cache pool, when the device being
replaced is still installed in the server.  Note: there is no webGUI monitoring of *btrfs replace*
operation in this release but you can monitor progress in the Log window.

- Fixed bug where the server TLD is not formed correctly in the self-signed SSL cert.  After installing this
release delete the self-signed cert `config/ssl/certs/<server-name>_unraid_bundle.pem` and then reboot to let
unRAID OS regenerate a new one.

- Disable "mover logging" by default for new installs. We recommend setting<br>
Settings/Scheduler/Mover Settings/Mover Logging to Disabled.

- We are phasing in a series of VM Manager improvements.

Base distro:

- aaa_elflibs: version 14.2-x86_64-34
- ca-certificates: version 20170717
- curl: version 7.58.0 (CVE-2018-1000007, CVE-2018-1000005)
- intel-microcode: version 20171117
- kernel-firmware: version 20180118
- mozilla-firefox: version 58.0.1 (CVE-2018-5091, CVE-2018-5092, CVE-2018-5093, CVE-2018-5094, CVE-2018-5095, CVE-2018-5097, CVE-2018-5098, CVE-2018-5099, CVE-2018-5100, CVE-2018-5101, CVE-2018-5102, CVE-2018-5103, CVE-2018-5104, CVE-2018-5105, CVE-2018-5106, CVE-2018-5107, CVE-2018-5108, CVE-2018-5109, CVE-2018-5110, CVE-2018-5111, CVE-2018-5112, CVE-2018-5113, CVE-2018-5114, CVE-2018-5115, CVE-2018-5116, CVE-2018-5117, CVE-2018-5118, CVE-2018-5119, CVE-2018-5121, CVE-2018-5122, CVE-2018-5090, CVE-2018-5189)
- ttyd: version 1.4.0

Linux kernel:

- version 4.14.16, compiled with GCC-7.3 (CVE-2017-5715)
- added patch for AMD Threadripper pci bridge reset
- added config options:
  - CONFIG_USB_EHCI_ROOT_HUB_TT: Root Hub Transaction Translators
  - CONFIG_USB_EHCI_TT_NEWSCHED: Improved Transaction Translator scheduling

Management:

- bug fix: server TLD not formed correctly in self-signed SSL cert.
- bug fix: primary IP address not correct in login greeting when there are two or more ethX but not using a bond or bridge.
- bug fix: navigating to localhost with Firefox in desktop gui mode when no dns servers are configured
- bug fix: rsyslogd: warning: ~ action is deprecated
- bug fix: exclude user plugins from cron in safemode
- update smartmontools drivedb and hwdata/{pci.ids,usb.ids,oui.txt,manuf.txt}
- docker: rebuild networks upon restart
- emhttp: add "Local TLD" configuration setting
- emhttp: bug fix: array Start hang if empty MEDIADIR
- emhttp: bug fix: handle btrfs cache pool replace device case
- mover: disable logging by default
- nginx: when SSL not in use, do not listen on https PORT
- rsyslogd: suppress nginx message 'user "logout" was not found in "/etc/nginx/htpasswd"'
- rsyslogd: suppress UpdateDNS message 'Error: Nothing to do'
- shfs: less verbose logging
- webgui: Add installed plugins & version to diagnostics
- webgui: List users alphabetically
- webgui: New Docker option to remove or preserve user defined networks
- webgui: Show History button when parity operation in progress
- webgui: Correct system information for systems with >= 1TB of RAM memory
- webgui: Included SMART attribute 199
- webgui: UpdateOS should fetch unRAIDServer.plg from LimeTech download site instead of from github                            
- webgui: Switch to font-awesome for delete template on add Container
- webgui: Updated jquery tablesorter to v2.29.4
- webgui: docker: improve escaping arguments to docker create/run
- webgui: Add in Support & Project Links to Docker Context Menus
- webgui: Add warning about running New Perms against appdata share
- webgui: Disable array STOP button when BTRFS operation is running 
- webgui: Round size in parity operation progress indicators 
- webgui: Give warning when non-recommended HTTP or HTTPS ports are chosen 
- webgui: Enhancements for docker custom networks
- webgui: Docker settings enhancements
- webgui: vm manager: shrink width separating cpu core checkboxes to prevent clipping on linux desktops (gtk3)
- webgui: vm manager: remove Log column
- webgui: vm manager: Only show VM Templates when Adding a VM
- webgui: vm manager: improve table vertical alignment with page header
- webgui: vm manager: re-style vm list and sublist elements
]]>
</CHANGES>

<!--
Be compatible with unRAID-5 installplg
-->
<FILE Name="/tmp/&name;.sh" Run="/bin/bash">
<INLINE>
rm /tmp/&name;.sh
# cleanup possibly failed previous download/install attempt
rm -rf /tmp/&name;*
mkdir /tmp/&name;
# check if this is unRAID-5
source /etc/unraid-version
if [[ "${version:0:2}" == "5." ]]; then
  # prevent endless install loop
  rm -rf /boot/plugins/&name;.plg
  rm -rf /boot/config/plugins/&name;.plg
  # check if 64-bit capable CPU
  if ! grep -q " lm" /proc/cpuinfo ; then
    echo "CPU is not 64-bit capable"
    exit 1
  fi
  # Wait until network is ready by pinging google - thanks bonienl!
  ip=8.8.4.4
  timer=30
  while [[ $timer -gt 0 ]]; do
    if [[ -n $(route -n|awk '/^0.0.0.0/{print $2}') &amp;&amp; $(ping -qnc1 $ip|awk '/received/{print $4}') -eq 1 ]]; then
      break
    fi
    ((timer--))
    sleep 1
  done
  if [[ $timer -eq 0 ]]; then
    echo "No network communication !!!"
    exit 1
  fi
  # unRAID-5 needs infozip
  if [ ! -f /boot/extra/&infozip; ]; then
    echo "Downloading &infozip; package"
    mkdir -p /boot/extra
    wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/&infozip; -O /boot/extra/&infozip;
    upgradepkg --install-new /boot/extra/&infozip;
  fi
  # download the release
  if ! wget --no-check-certificate &zip; -O /tmp/&name;.zip ; then
    echo "&zip; download error $?"
    exit 1
  fi
  if ! wget --no-check-certificate &md5; -O /tmp/&name;.md5 ; then
    echo "&md5; download error $?"
    exit 1
  fi
fi
</INLINE>
</FILE>

<!--
Download release from S3
For unRAID-5 this will be skipped because already downloaded above
For unRAID-6 we download here, verifying certificiate
-->
<FILE Name="/tmp/&name;.zip">
<URL>&zip;</URL>
</FILE>
<FILE Name="/tmp/&name;.md5">
<URL>&md5;</URL>
</FILE>

<FILE Name="/tmp/&name;.sh" Run="/bin/bash">
<INLINE>
rm /tmp/&name;.sh
# check download and extract
sum1=$(/usr/bin/md5sum /tmp/&name;.zip)
sum2=$(cat /tmp/&name;.md5)
if [[ "${sum1:0:32}" != "${sum2:0:32}" ]]; then
  echo "wrong md5"
  exit 1
fi
if ! unzip -d /tmp/&name; /tmp/&name;.zip ; then
  echo "unzip error $?"
  exit 1
fi
# check if enough free space on flash
have=$(df -k /boot | awk ' END { print $4 } ')
need=$(du -Ssk /tmp/&name; | awk ' END { print $1 } ')
source /etc/unraid-version
if [[ "${version:0:2}" == "5." ]]; then
  # to permit another upgrade
  need=$(($need * 2))
fi
# add some margin for possible additional config info
need=$(($need + 8192))
if [[ $need -gt $have ]]; then
  echo "boot device shows $have free but upgrade needs $need"
  exit 1
fi
# move release files to flash
mkdir -p /boot/&name;
rm -rf /boot/&name;/*
if ! mv /tmp/&name;/{&files;} /boot/&name; ; then
  echo "flash write error $?, maybe corrupted?"
  rm -rf /boot/&name;/*
  exit 1
fi
# preserve previous version
source /etc/unraid-version
if [[ "${version:0:2}" == "6." ]]; then
  mkdir -p /boot/previous
  rm -rf /boot/previous/*
  mv /boot/{&files;} /boot/previous
else
  mkdir -p /boot/unRAID5
  rm -rf /boot/unRAID5/*
  # preserve all files in root of flash except ldlinux.sys needed to boot
  find /boot -maxdepth 1 -type f -not -name ldlinux.sys -exec mv {} /boot/unRAID5 \;
  # preserve a few directories
  mv /boot/extra /boot/unRAID5 &amp;&gt; /dev/null
  mv /boot/packages /boot/unRAID5 &amp;&gt; /dev/null
  mv /boot/plugins /boot/unRAID5 &amp;&gt; /dev/null
  mkdir /boot/unRAID5/config
  mv /boot/config/plugins /boot/unRAID5/config &amp;&gt; /dev/null
  # grab a fresh 'go' file
  mv /boot/config/go /boot/unRAID5/config
  cp /tmp/&name;/config/go /boot/config
  # ensure key file is in the 'config' directory
  cp /boot/unRAID5/*.key /boot/config &amp;&gt; /dev/null
fi
# move new version files into place
mv /boot/&name;/* /boot
rmdir /boot/&name;
# move the new syslinux.cfg- in to the syslinux folder
if [[ -f /boot/syslinux.cfg- ]]; then
  mv /boot/syslinux.cfg- /boot/syslinux
fi
# if unRaid-6 replace the readme file
if [[ "${version:0:2}" == "6." ]]; then
  echo "**REBOOT REQUIRED!**" &gt; /usr/local/emhttp/plugins/&name;/README.md
fi
# if unRaid-6.3 ensure GUI Safe Mode syslinux option exists
if [[ "${version:0:3}" == "6.3" ]]; then
  if ! grep -q 'initrd=/bzroot,/bzroot-gui unraidsafemode' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null ; then
    sed -i 's|label Memtest86+|label unRAID OS GUI Safe Mode (no plugins)\r\n  kernel /bzimage\r\n  append initrd=/bzroot,/bzroot-gui unraidsafemode\r\nlabel Memtest86+|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
  fi
fi
# when upgrading any version prior to 6.2
if [[ "${version:0:3}" &lt; "6.2" ]]; then
  if ! grep -q '/bzroot-gui' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null ; then
    sed -i 's|menu title Lime Technology\r|menu title Lime Technology, Inc.\r|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
    sed -i 's|label unRAID OS Safe Mode (no plugins)|label unRAID OS GUI Mode\r\n  kernel /bzimage\r\n  append initrd=/bzroot,/bzroot-gui\r\nlabel unRAID OS Safe Mode (no plugins, no GUI)|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
  fi
fi
# when upgrading any version prior to 6.1
if [[ "${version:0:3}" &lt; "6.1" ]]; then
  if ! grep -q 'shareDisk' /boot/config/share.cfg &amp;&gt; /dev/null ; then
    echo 'shareDisk="yes"' &gt;&gt; /boot/config/share.cfg
  fi
fi
# when upgrading from 6.0.x
if [[ "${version:0:3}" == "6.0" ]]; then
  sed -i 's|dynamix.docker.manager/dockerupdate.php|dynamix.docker.manager/scripts/dockerupdate.php|g' /boot/config/plugins/dynamix/docker-update.cron &amp;&gt; /dev/null
  sed -i 's|sbin/monitor|emhttp/plugins/dynamix/scripts/monitor|g' /boot/config/plugins/dynamix/monitor.cron &amp;&gt; /dev/null
  sed -i 's|/root/mdcmd|/usr/local/sbin/mdcmd|g' /boot/config/plugins/dynamix/parity-check.cron &amp;&gt; /dev/null
  sed -i 's|sbin/plugincheck|emhttp/plugins/dynamix.plugin.manager/scripts/plugincheck|g' /boot/config/plugins/dynamix/plugin-check.cron &amp;&gt; /dev/null
  sed -i 's|sbin/statuscheck|emhttp/plugins/dynamix/scripts/statuscheck|g' /boot/config/plugins/dynamix/status-check.cron &amp;&gt; /dev/null
fi
# if template-repos does not exist
if [[ ! -e /boot/config/plugins/dockerMan/template-repos ]]; then
  mkdir -p /boot/config/plugins/dockerMan
  echo "https://github.com/limetech/docker-templates" &gt; /boot/config/plugins/dockerMan/template-repos
fi
# correct initial EFI syslinux.cfg
if [[ -d /boot/EFI/boot &amp;&amp; "${version}" == "6.4.0-rc4" ]]; then
  cp /tmp/&name;/EFI-/boot/syslinux.cfg /boot/EFI/boot
fi
# if EFI or EFI- directory does not exist
if [[ ! -e /boot/EFI &amp;&amp; ! -e /boot/EFI- ]]; then
  mv /tmp/&name;/EFI- /boot
  sed -i 's|default /syslinux/menu.c32|default menu.c32|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
fi
echo "syncing - please wait..."
sync
echo "Update successful - PLEASE REBOOT YOUR SERVER"
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Name="/tmp/&name;.sh" Run="/bin/bash" Method="remove">
<INLINE>
rm /tmp/&name;.sh
# unRAID-5 doesn't support 'remove' method, so we're done
source /etc/unraid-version
if [[ "${version:0:2}" == "5." ]]; then
  exit 0
fi
if [[ -d /boot/previous ]]; then
  # restore previous unRAID-6 release
  mv /boot/previous/* /boot
  rmdir /boot/previous
  echo "**REBOOT REQUIRED!**" &gt; /usr/local/emhttp/plugins/&name;/README.md
elif [[ -d /boot/unRAID5 ]]; then
  # restore previous unRAID-5 release
  rm -rf /boot/extra
  mv /boot/unRAID5/extra /boot &amp;&gt; /dev/null
  rm -rf /boot/plugins
  mv /boot/unRAID5/plugins /boot &amp;&gt; /dev/null
  rm -rf /boot/packages
  mv /boot/unRAID5/packages /boot &amp;&gt; /dev/null
  rm -rf /boot/config/plugins
  mv /boot/unRAID5/config/plugins /boot/config &amp;&gt; /dev/null
  mv /boot/unRAID5/config/go /boot/config
  rmdir /boot/unRAID5/config
  mv /boot/unRAID5/* /boot
  rmdir /boot/unRAID5
else
  echo "Cannot remove, no previous version"
  exit 1
fi
echo "Removing old versions of dynamix"
rm -rf /boot/config/plugins/dynamix.plg
echo "syncing..."
sync
echo "Remove successful - PLEASE REBOOT YOUR SERVER"
</INLINE>
</FILE>

</PLUGIN>
